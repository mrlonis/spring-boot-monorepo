{
	"info": {
		"_postman_id": "78647f5f-ed0e-4c06-99c6-f7f1f44dad56",
		"name": "oauth2-authorization-server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10017040"
	},
	"item": [
		{
			"name": "Actuator",
			"item": [
				{
					"name": "Actuator",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Status Code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actuator",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actuator"
							]
						}
					},
					"response": []
				},
				{
					"name": "Health",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Status Code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actuator/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actuator",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Status Code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actuator/info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actuator",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "Mappings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Status Code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actuator/mappings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actuator",
								"mappings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Metrics",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Status Code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actuator/metrics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actuator",
								"metrics"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Controller",
			"item": [
				{
					"name": "/v1/test - OIDC Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(pm.variables);\r",
									"console.log(pm.environment);\r",
									"if (pm.environment.get(\"CI\") === \"true\") {\r",
									"    pm.test(\"Response Status Code is 401\", function(){\r",
									"        pm.response.to.have.status(401);\r",
									"    });\r",
									"} else {\r",
									"    pm.test(\"Response Status Code is 200\", function(){\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.log(pm.variables);\r",
									"console.log(pm.environment);\r",
									"if (pm.environment.get(\"CI\") === \"true\") {\r",
									"    console.log(\"Setting next request to null\");\r",
									"    pm.execution.setNextRequest(null);\r",
									"} else {\r",
									"    console.log(\"CI set to false\");\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "clientId",
									"value": "{{oidcClientId}}",
									"type": "string"
								},
								{
									"key": "useBrowser",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "grant_type",
									"value": "authorization_code_with_pkce",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "{{baseUrl}}/oauth2/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "{{baseUrl}}/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "client_authentication",
									"value": "body",
									"type": "string"
								},
								{
									"key": "clientSecret",
									"value": "",
									"type": "string"
								},
								{
									"key": "scope",
									"value": "openid profile email",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenName",
									"value": "Postman Login",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "OAuth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Status Code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Capture Access Token to Environment Variable\", function () {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.environment.set(\"access_token\", responseJson.access_token);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{oauthClientSecret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{oauthClientId}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "{{oauthScopes}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/oauth2/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "/v1/test - OAuth2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" pm.test(\"Response Status Code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"test"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}